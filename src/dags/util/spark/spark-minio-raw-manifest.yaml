#
# Spark Application Manifest
# Manifesto Customizado
# Executa um script de leitura de amostra de dados e o transforma em tabela delta
#
# Passa as configurações do Spark no manifesto
#
# Expoe na sessao monitoring do YAML as metricas e os arquivos
# necessarios para entregar as metricas do Spark
#

apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: spark-minio-raw #-{{ macros.datetime.now().strftime("%Y-%m-%d-%H-%M-%S") }}
  namespace: operator
spec:
  type: Python
  pythonVersion: "3"
  mode: cluster
  image: <repo-docker-hub/imagem:tag>
  imagePullPolicy: IfNotPresent
  mainApplicationFile: "local:///opt/spark/work-dir/generate_raw_data.py"
  sparkVersion: 3.4.1
  sparkConf:
    "spark.jars.packages": "io.delta:delta-core_2.12:2.4.0,org.apache.hadoop:hadoop-aws:3.3.1,com.amazonaws:aws-java-sdk-bundle:1.11.901"
    "spark.sql.extensions": "io.delta.sql.DeltaSparkSessionExtension"
    "spark.sql.catalog.spark_catalog": "org.apache.spark.sql.delta.catalog.DeltaCatalog"
    "spark.hadoop.fs.s3a.access.key": $(AWS_ACCESS_KEY_ID)
    "spark.hadoop.fs.s3a.secret.key": $(AWS_SECRET_ACCESS_KEY)
    "spark.hadoop.fs.s3a.endpoint": "http://dlkdataway-hl.storage:9000"
    "spark.hadoop.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
  restartPolicy:
    type: Never
  driver:
    cores: 1
    coreRequest: "0.5"
    coreLimit: 800m
    memory: 512m
    labels:
      version: 3.4.1
    serviceAccount: spark-operator-datawaybr-spark
    envFrom:
      - secretRef:
          name: minio-s3-credentials
  executor:
    instances: 1
    coreRequest: "1200m"
    coreLimit: 1500m
    memory: 512m
    labels:
      version: 3.4.1
    envFrom:
      - secretRef:
          name: minio-s3-credentials
  monitoring:
    exposeDriverMetrics: true
    exposeExecutorMetrics: true
    prometheus:
      jmxExporterJar: /opt/spark/jars/jmx_prometheus_javaagent-0.11.0.jar
      port: 8090
      portName: prometheus